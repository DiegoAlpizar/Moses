require 'luacov'
local M = require 'moses'

describe('Alias specs', function()
  
  it('provide aliases for table functions',function()
    assert.equal(M.forEach       , M.each)
    assert.equal(M.forEachi      , M.eachi)
    assert.equal(M.update        , M.adjust)
    assert.equal(M.alleq         , M.allEqual)
    assert.equal(M.loop          , M.cycle)
    assert.equal(M.collect       , M.map)
    assert.equal(M.inject        , M.reduce)
    assert.equal(M.foldl         , M.reduce)
    assert.equal(M.injectr       , M.reduceRight)
    assert.equal(M.foldr         , M.reduceRight)
    assert.equal(M.mapr          , M.mapReduce)
    assert.equal(M.maprr         , M.mapReduceRight)
    assert.equal(M.any           , M.include)
    assert.equal(M.some          , M.include)
    assert.equal(M.contains      , M.include)
    assert.equal(M.filter        , M.select)
    assert.equal(M.discard       , M.reject)
    assert.equal(M.every         , M.all)
  end)
  
  it('provide aliases for array functions',function()
    assert.equal(M.takeWhile     , M.selectWhile)
    assert.equal(M.rejectWhile   , M.dropWhile)
    assert.equal(M.pop           , M.shift)
    assert.equal(M.remove        , M.pull)
    assert.equal(M.rmRange       , M.removeRange)
    assert.equal(M.chop          , M.removeRange)
    assert.equal(M.sub           , M.slice)
    assert.equal(M.head          , M.first)
    assert.equal(M.take          , M.first)
    assert.equal(M.tail          , M.rest)
    assert.equal(M.without       , M.difference)
    assert.equal(M.diff          , M.difference)
    assert.equal(M.symdiff       , M.symmetricDifference)
    assert.equal(M.xor           , M.symmetricDifference)
    assert.equal(M.uniq          , M.unique)
    assert.equal(M.isuniq        , M.isunique)
    assert.equal(M.transpose     , M.zip)
    assert.equal(M.part          , M.partition)
    assert.equal(M.perm          , M.permutation)
    assert.equal(M.transposeWith , M.zipWith)
    assert.equal(M.intersperse   , M.interpose)
    assert.equal(M.sliding       , M.aperture)
    assert.equal(M.mirror        , M.invert)
    assert.equal(M.join          , M.concat)
    assert.equal(M.average       , M.mean)
  end)
  
  it('provide aliases for utility functions',function()
    assert.equal(M.always        , M.constant)
    assert.equal(M.cache         , M.memoize)
    assert.equal(M.juxt          , M.juxtapose)
    assert.equal(M.uid           , M.uniqueId)
    assert.equal(M.iter          , M.iterator)
    assert.equal(M.nAry          , M.ary)
  end)

  it('provide aliases for object functions',function()
    assert.equal(M.methods       , M.functions)
    assert.equal(M.choose        , M.pick)
    assert.equal(M.drop          , M.omit)
    assert.equal(M.defaults      , M.template)
    assert.equal(M.compare       , M.isEqual)
    assert.equal(M.matches       , M.isEqual)   
  end)
  
end)